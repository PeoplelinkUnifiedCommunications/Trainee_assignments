{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harish Sriyadula\\\\redux-page\\\\src\\\\FormContainer\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { v4 } from \"uuid\";\nimport { React, useState } from \"react\";\nimport { FaUserAlt } from \"react-icons/fa\";\nimport { AiFillMail } from \"react-icons/ai\";\nimport \"./index.css\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { addTask } from \"../action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormContainer = props => {\n  _s();\n\n  const {\n    appState,\n    addNewTask,\n    history\n  } = props;\n  console.log(appState);\n  const [validation1, setvalidation1] = useState({\n    nameValidation: \"\",\n    emailValidation: \"\",\n    dateValidation: \"\"\n  });\n  let [name, setname] = useState(\"\");\n  let [email, setemail] = useState(\"\");\n  let [date, setdate] = useState(\"\");\n\n  const blurNameInput = event => {\n    if (event.target.value === \"\") {\n      setvalidation1(prevState => ({ ...prevState,\n        nameValidation: \"**Required**\"\n      }));\n    } else {\n      setvalidation1(prevState => ({ ...prevState,\n        nameValidation: \"\"\n      }));\n    }\n  };\n\n  const blurEmailInput = event => {\n    if (event.target.value === \"\") {\n      setvalidation1(prevState => ({ ...prevState,\n        emailValidation: \"**Required**\"\n      }));\n    } else {\n      setvalidation1(prevState => ({ ...prevState,\n        emailValidation: \"\"\n      }));\n    }\n  };\n\n  const blurDateInput = event => {\n    if (event.target.value === \"\") {\n      setvalidation1(prevState => ({ ...prevState,\n        dateValidation: \"**Required**\"\n      }));\n      setdate(\"\");\n    } else {\n      setvalidation1(prevState => ({ ...prevState,\n        dateValidation: \"\"\n      }));\n    }\n  };\n\n  const nameInput = event => {\n    setvalidation1(prevState => ({ ...prevState,\n      nameValidation: \"\"\n    }));\n    setname(event.target.value);\n\n    if (event.target.value === \"\") {\n      setvalidation1(prevState => ({ ...prevState,\n        nameValidation: \"**Required**\"\n      }));\n    }\n\n    if (event.target.value.match(/^[A-Za-z]+$/)) {\n      setvalidation1(prevState => ({ ...prevState,\n        nameValidation: \"\"\n      }));\n    } else if (event.target.value.match(/^[A-Za-z]+$/) === null && event.target.value !== \"\") {\n      setvalidation1(prevState => ({ ...prevState,\n        nameValidation: \"**Name formate is wrong**\"\n      }));\n    }\n  };\n\n  const emailInput = event => {\n    setvalidation1(prevState => ({ ...prevState,\n      emailValidation: \"\"\n    }));\n    setemail(event.target.value);\n    setvalidation1(prevState => ({ ...prevState,\n      emailValidation: \"\"\n    }));\n  };\n\n  const dateInput = event => {\n    setvalidation1(prevState => ({ ...prevState,\n      dateValidation: \"\"\n    }));\n    setdate(event.target.value);\n    let result = moment(event.target.value, \"MM/DD/YYYY\").isValid();\n    console.log(result);\n\n    if (event.target.value === \"\") {\n      setvalidation1(prevState => ({ ...prevState,\n        dateValidation: \"**Required**\"\n      }));\n      setdate(\"\");\n    } else {\n      if (result === true) {\n        if (new Date(event.target.value) > new Date()) {\n          setvalidation1(prevState => ({ ...prevState,\n            dateValidation: \"**Date is invalid**\"\n          }));\n        } else {\n          setvalidation1(prevState => ({ ...prevState,\n            dateValidation: \"\"\n          }));\n        }\n      } else {\n        setvalidation1(prevState => ({ ...prevState,\n          dateValidation: \"**Date is invalid**\"\n        }));\n      }\n    }\n  };\n\n  var regex = /^((([a-zA-Z]|[0-9])|([-]|[_]|[.])){1,})+[@](([a-zA-Z0-9])|([-]|[.])){2,40}[.]((([a-zA-Z0-9]){2,10})|(([a-zA-Z0-9]){2,4}[.]([a-zA-Z0-9]){2,4}))$/;\n\n  const submtDetails = async event => {\n    event.preventDefault();\n    let age;\n\n    if (date !== \"\") {\n      const userDate = new Date(date);\n      const nowDate = new Date();\n      age = nowDate.getFullYear() - userDate.getFullYear();\n    }\n\n    const newList = {\n      id: v4(),\n      name: name,\n      email: email,\n      date: age\n    };\n\n    if (name === \"\") {\n      setvalidation1(prevState => ({ ...prevState,\n        nameValidation: \"**Required**\"\n      }));\n      setvalidation1(prevState => ({ ...prevState,\n        emailValidation: \"\"\n      }));\n    }\n\n    if (email === \"\") {\n      setvalidation1(prevState => ({ ...prevState,\n        emailValidation: \"**Required**\"\n      }));\n    }\n\n    if (date === \"\") {\n      setvalidation1(prevState => ({ ...prevState,\n        dateValidation: \"**Required**\"\n      }));\n      setdate(\"\");\n    }\n\n    if (name === \"\" || email === \"\" || date === \"\") {} else {\n      if (moment(date, \"MM/DD/YYYY\").isValid() === false) {\n        setvalidation1(prevState => ({ ...prevState,\n          dateValidation: \"**Date is invalid**\"\n        }));\n      } else if (newList.name.match(/^[A-Za-z]+$/) === null && newList.name !== \"\") {\n        setvalidation1(prevState => ({ ...prevState,\n          nameValidation: \"**Name formate is wrong**\"\n        }));\n      } else if (newList.email.match(regex)) {\n        const emailAvalibel = appState.find(each => each.email === newList.email);\n\n        if (emailAvalibel) {\n          setvalidation1(prevState => ({ ...prevState,\n            emailValidation: \"**Email alredy exits**\"\n          }));\n        } else {\n          setvalidation1(prevState => ({ ...prevState,\n            emailValidation: \"\"\n          }));\n          await addNewTask(newList);\n          console.log(appState);\n          history.replace(\"/\");\n        }\n      } else if (newList.email !== \"\" || newList.email.match(regex)) {\n        setvalidation1(prevState => ({ ...prevState,\n          emailValidation: \"**Email wrong**\"\n        }));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"from-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: submtDetails,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"margin\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            id: \"text\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon-container\",\n              children: /*#__PURE__*/_jsxDEV(FaUserAlt, {\n                className: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              \"aria-label\": \"Primary\",\n              id: \"text\",\n              className: \"inputText\",\n              onChange: nameInput,\n              onBlur: blurNameInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errorMsg\",\n            children: validation1.nameValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"margin\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon-container\",\n              children: /*#__PURE__*/_jsxDEV(AiFillMail, {\n                className: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"text\",\n              className: \"inputText\",\n              onChange: emailInput,\n              onBlur: blurEmailInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errorMsg\",\n            children: validation1.emailValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date Of Birth: MM/DD/YY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"margin\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            id: \"date\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"icon-container\",\n              children: /*#__PURE__*/_jsxDEV(AiFillMail, {\n                className: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"text\",\n              className: \"inputText\",\n              onChange: dateInput,\n              onBlur: blurDateInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"errorMsg\",\n            children: validation1.dateValidation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormContainer, \"ESjhUaHTm6fmrw4+tyaoIq3sh+s=\");\n\n_c = FormContainer;\n\nconst mapStateToProps = state => ({\n  appState: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addNewTask: newList => dispatch(addTask(newList))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"FormContainer\");","map":{"version":3,"sources":["C:/Users/Harish Sriyadula/redux-page/src/FormContainer/index.js"],"names":["v4","React","useState","FaUserAlt","AiFillMail","moment","connect","addTask","FormContainer","props","appState","addNewTask","history","console","log","validation1","setvalidation1","nameValidation","emailValidation","dateValidation","name","setname","email","setemail","date","setdate","blurNameInput","event","target","value","prevState","blurEmailInput","blurDateInput","nameInput","match","emailInput","dateInput","result","isValid","Date","regex","submtDetails","preventDefault","age","userDate","nowDate","getFullYear","newList","id","emailAvalibel","find","each","replace","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { v4 } from \"uuid\";\r\nimport { React, useState } from \"react\";\r\nimport { FaUserAlt } from \"react-icons/fa\";\r\nimport { AiFillMail } from \"react-icons/ai\";\r\nimport \"./index.css\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTask } from \"../action\";\r\n\r\nconst FormContainer = props => {\r\n\tconst { appState, addNewTask, history } = props;\r\n\tconsole.log(appState);\r\n\r\n\tconst [validation1, setvalidation1] = useState({\r\n\t\tnameValidation: \"\",\r\n\t\temailValidation: \"\",\r\n\t\tdateValidation: \"\",\r\n\t});\r\n\r\n\tlet [name, setname] = useState(\"\");\r\n\tlet [email, setemail] = useState(\"\");\r\n\tlet [date, setdate] = useState(\"\");\r\n\tconst blurNameInput = event => {\r\n\t\tif (event.target.value === \"\") {\r\n\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t...prevState,\r\n\t\t\t\tnameValidation: \"**Required**\",\r\n\t\t\t}));\r\n\t\t} else {\r\n\t\t\tsetvalidation1(prevState => ({ ...prevState, nameValidation: \"\" }));\r\n\t\t}\r\n\t};\r\n\tconst blurEmailInput = event => {\r\n\t\tif (event.target.value === \"\") {\r\n\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t...prevState,\r\n\t\t\t\temailValidation: \"**Required**\",\r\n\t\t\t}));\r\n\t\t} else {\r\n\t\t\tsetvalidation1(prevState => ({ ...prevState, emailValidation: \"\" }));\r\n\t\t}\r\n\t};\r\n\tconst blurDateInput = event => {\r\n\t\tif (event.target.value === \"\") {\r\n\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t...prevState,\r\n\t\t\t\tdateValidation: \"**Required**\",\r\n\t\t\t}));\r\n\t\t\tsetdate(\"\");\r\n\t\t} else {\r\n\t\t\tsetvalidation1(prevState => ({ ...prevState, dateValidation: \"\" }));\r\n\t\t}\r\n\t};\r\n\tconst nameInput = event => {\r\n\t\tsetvalidation1(prevState => ({ ...prevState, nameValidation: \"\" }));\r\n\t\tsetname(event.target.value);\r\n\t\tif (event.target.value === \"\") {\r\n\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t...prevState,\r\n\t\t\t\tnameValidation: \"**Required**\",\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif (event.target.value.match(/^[A-Za-z]+$/)) {\r\n\t\t\tsetvalidation1(prevState => ({ ...prevState, nameValidation: \"\" }));\r\n\t\t} else if (\r\n\t\t\tevent.target.value.match(/^[A-Za-z]+$/) === null &&\r\n\t\t\tevent.target.value !== \"\"\r\n\t\t) {\r\n\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t...prevState,\r\n\t\t\t\tnameValidation: \"**Name formate is wrong**\",\r\n\t\t\t}));\r\n\t\t}\r\n\t};\r\n\tconst emailInput = event => {\r\n\t\tsetvalidation1(prevState => ({ ...prevState, emailValidation: \"\" }));\r\n\t\tsetemail(event.target.value);\r\n\r\n\t\tsetvalidation1(prevState => ({ ...prevState, emailValidation: \"\" }));\r\n\t};\r\n\tconst dateInput = event => {\r\n\t\tsetvalidation1(prevState => ({ ...prevState, dateValidation: \"\" }));\r\n\t\tsetdate(event.target.value);\r\n\t\tlet result = moment(event.target.value, \"MM/DD/YYYY\").isValid();\r\n\t\tconsole.log(result);\r\n\t\tif (event.target.value === \"\") {\r\n\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t...prevState,\r\n\t\t\t\tdateValidation: \"**Required**\",\r\n\t\t\t}));\r\n\t\t\tsetdate(\"\");\r\n\t\t} else {\r\n\t\t\tif (result === true) {\r\n\t\t\t\tif (new Date(event.target.value) > new Date()) {\r\n\t\t\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\tdateValidation: \"**Date is invalid**\",\r\n\t\t\t\t\t}));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetvalidation1(prevState => ({ ...prevState, dateValidation: \"\" }));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t\t...prevState,\r\n\t\t\t\t\tdateValidation: \"**Date is invalid**\",\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tvar regex =\r\n\t\t/^((([a-zA-Z]|[0-9])|([-]|[_]|[.])){1,})+[@](([a-zA-Z0-9])|([-]|[.])){2,40}[.]((([a-zA-Z0-9]){2,10})|(([a-zA-Z0-9]){2,4}[.]([a-zA-Z0-9]){2,4}))$/;\r\n\r\n\tconst submtDetails = async event => {\r\n\t\tevent.preventDefault();\r\n\t\tlet age;\r\n\t\tif (date !== \"\") {\r\n\t\t\tconst userDate = new Date(date);\r\n\t\t\tconst nowDate = new Date();\r\n\t\t\tage = nowDate.getFullYear() - userDate.getFullYear();\r\n\t\t}\r\n\t\tconst newList = {\r\n\t\t\tid: v4(),\r\n\t\t\tname: name,\r\n\t\t\temail: email,\r\n\t\t\tdate: age,\r\n\t\t};\r\n\t\tif (name === \"\") {\r\n\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t...prevState,\r\n\t\t\t\tnameValidation: \"**Required**\",\r\n\t\t\t}));\r\n\r\n\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t...prevState,\r\n\t\t\t\temailValidation: \"\",\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif (email === \"\") {\r\n\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t...prevState,\r\n\t\t\t\temailValidation: \"**Required**\",\r\n\t\t\t}));\r\n\t\t}\r\n\t\tif (date === \"\") {\r\n\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t...prevState,\r\n\t\t\t\tdateValidation: \"**Required**\",\r\n\t\t\t}));\r\n\r\n\t\t\tsetdate(\"\");\r\n\t\t}\r\n\t\tif (name === \"\" || email === \"\" || date === \"\") {\r\n\t\t} else {\r\n\t\t\tif (moment(date, \"MM/DD/YYYY\").isValid() === false) {\r\n\t\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t\t...prevState,\r\n\t\t\t\t\tdateValidation: \"**Date is invalid**\",\r\n\t\t\t\t}));\r\n\t\t\t} else if (\r\n\t\t\t\tnewList.name.match(/^[A-Za-z]+$/) === null &&\r\n\t\t\t\tnewList.name !== \"\"\r\n\t\t\t) {\r\n\t\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t\t...prevState,\r\n\t\t\t\t\tnameValidation: \"**Name formate is wrong**\",\r\n\t\t\t\t}));\r\n\t\t\t} else if (newList.email.match(regex)) {\r\n\t\t\t\tconst emailAvalibel = appState.find(\r\n\t\t\t\t\teach => each.email === newList.email\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (emailAvalibel) {\r\n\t\t\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\temailValidation: \"**Email alredy exits**\",\r\n\t\t\t\t\t}));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t\t\t...prevState,\r\n\t\t\t\t\t\temailValidation: \"\",\r\n\t\t\t\t\t}));\r\n\r\n\t\t\t\t\tawait addNewTask(newList);\r\n\t\t\t\t\tconsole.log(appState);\r\n\t\t\t\t\thistory.replace(\"/\");\r\n\t\t\t\t}\r\n\t\t\t} else if (newList.email !== \"\" || newList.email.match(regex)) {\r\n\t\t\t\tsetvalidation1(prevState => ({\r\n\t\t\t\t\t...prevState,\r\n\t\t\t\t\temailValidation: \"**Email wrong**\",\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"bg-container\">\r\n\t\t\t<div className=\"from-container\">\r\n\t\t\t\t<form className=\"form\" onSubmit={submtDetails}>\r\n\t\t\t\t\t<label htmlFor=\"text\">Name</label>\r\n\t\t\t\t\t<div className=\"margin\">\r\n\t\t\t\t\t\t<div className=\"input-container\" id=\"text\">\r\n\t\t\t\t\t\t\t<div className=\"icon-container\">\r\n\t\t\t\t\t\t\t\t<FaUserAlt className=\"image\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\taria-label=\"Primary\"\r\n\t\t\t\t\t\t\t\tid=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"inputText\"\r\n\t\t\t\t\t\t\t\tonChange={nameInput}\r\n\t\t\t\t\t\t\t\tonBlur={blurNameInput}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className=\"errorMsg\">{validation1.nameValidation}</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t<div className=\"margin\">\r\n\t\t\t\t\t\t<div className=\"input-container\" id=\"email\">\r\n\t\t\t\t\t\t\t<div className=\"icon-container\">\r\n\t\t\t\t\t\t\t\t<AiFillMail className=\"image\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tid=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"inputText\"\r\n\t\t\t\t\t\t\t\tonChange={emailInput}\r\n\t\t\t\t\t\t\t\tonBlur={blurEmailInput}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className=\"errorMsg\">{validation1.emailValidation}</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<label htmlFor=\"date\">Date Of Birth: MM/DD/YY</label>\r\n\t\t\t\t\t<div className=\"margin\">\r\n\t\t\t\t\t\t<div className=\"input-container\" id=\"date\">\r\n\t\t\t\t\t\t\t<div className=\"icon-container\">\r\n\t\t\t\t\t\t\t\t<AiFillMail className=\"image\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tid=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"inputText\"\r\n\t\t\t\t\t\t\t\tonChange={dateInput}\r\n\t\t\t\t\t\t\t\tonBlur={blurDateInput}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className=\"errorMsg\">{validation1.dateValidation}</p>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<button type=\"submit\" className=\"btn\">\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tappState: state,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\taddNewTask: newList => dispatch(addTask(newList)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContainer);\r\n"]},"metadata":{},"sourceType":"module"}