{"ast":null,"code":"var _jsxFileName = \"/home/peoplelink/peoplelink/Trainee_assignments/assignment01/src/components/CreateUser/index.js\",\n    _s = $RefreshSig$();\n\nimport DataContext from \"../Context\";\nimport { v4 } from \"uuid\";\nimport React, { useState } from 'react';\nimport { FaUserAlt } from \"react-icons/fa\";\nimport { AiFillMail } from \"react-icons/ai\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateUser = props => {\n  _s();\n\n  let [blurName, setblurName] = useState(false);\n  let [blurEmail, setblurEmail] = useState(false);\n  let [blurDob, setblurDob] = useState(false);\n  let [name, setname] = useState(\"\");\n  let [email, setemail] = useState(\"\");\n  let [date, setdate] = useState(\"\");\n  let [errorName, setErrorName] = useState(false);\n  let [errorDate, setErrorDate] = useState(false);\n  let [errorEmail, setErrorEmail] = useState(false);\n  let [eamilChecking, seteamilChecking] = useState(false);\n\n  const blurNameInput = event => {\n    if (event.target.value === \"\") {\n      setblurName(true);\n    } else {\n      setblurName(false);\n    }\n  };\n\n  const blurEmailInput = event => {\n    if (event.target.value === \"\") {\n      setblurEmail(true);\n    } else {\n      setblurEmail(false);\n    }\n  };\n\n  const blurDateInput = event => {\n    if (event.target.value === \"\") {\n      setblurDob(true);\n    } else {\n      setblurDob(false);\n    }\n  };\n\n  const nameInput = event => {\n    setblurName(false);\n    setname(event.target.value);\n\n    if (!event.target.value.match(/^[A-Za-z ]+$/)) {\n      setErrorName(true);\n    }\n  };\n\n  const emailInput = event => {\n    setblurEmail(false);\n    setemail(event.target.value);\n    seteamilChecking(false);\n  };\n\n  const dateInput = event => {\n    setblurDob(false);\n    seteamilChecking(false);\n    const userDateBirth = new Date(event.target.value);\n    const nowDate = new Date();\n\n    if (event.target.value === \"\") {\n      console.log(\"date\");\n    } else {\n      if (userDateBirth.toString() === \"Invalid Date\") {\n        setErrorDate(true);\n      } else {\n        setErrorDate(errorDate = false);\n        const diff = nowDate.getFullYear() - userDateBirth.getFullYear();\n        setdate(diff);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DataContext.Consumer, {\n    children: value => {\n      const {\n        list,\n        addList\n      } = value;\n\n      const submtDetails = event => {\n        event.preventDefault();\n        const newList = {\n          id: v4(),\n          name: name,\n          email: email,\n          date: date\n        };\n\n        if (name === \"\") {\n          setblurName(true);\n          setErrorEmail(false);\n          seteamilChecking(false);\n        }\n\n        if (email === \"\") {\n          setblurEmail(true);\n          setErrorEmail(false);\n          seteamilChecking(false);\n        }\n\n        if (date === \"\") {\n          setblurDob(true);\n          setErrorEmail(false);\n          seteamilChecking(false);\n        } else if (newList.email.endsWith(\".com\") && newList.email.includes(\"@\")) {\n          setErrorEmail(false);\n          const emailAvalibel = list.find(each => each.email === newList.email);\n\n          if (emailAvalibel) {\n            seteamilChecking(true);\n            setError(false);\n          } else {\n            seteamilChecking(false);\n            addList(newList);\n            const {\n              history\n            } = props;\n            history.replace('/');\n          }\n        } else {\n          setemailError(true);\n          seteamilChecking(false);\n        }\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"from-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: submtDetails,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"text\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"margin\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-container\",\n                id: \"text\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"icon-container\",\n                  children: /*#__PURE__*/_jsxDEV(FaUserAlt, {\n                    className: \"image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"text\",\n                  className: \"inputText\",\n                  onChange: nameInput,\n                  onBlur: blurNameInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this), blurMssg1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: \"**required**\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 34\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 77\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"margin\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-container\",\n                id: \"email\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"icon-container\",\n                  children: /*#__PURE__*/_jsxDEV(AiFillMail, {\n                    className: \"image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"text\",\n                  className: \"inputText\",\n                  onChange: emailInput,\n                  onBlur: blurEmailInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this), blurMssg2 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: \"**required**\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 34\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 77\n              }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: \"Email worng\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 34\n              }, this), eamilChecking && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: \"Email alredy exits\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"date\",\n              children: \"Date Of Birth: MM/DD/YY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"margin\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-container\",\n                id: \"date\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"icon-container\",\n                  children: /*#__PURE__*/_jsxDEV(AiFillMail, {\n                    className: \"image\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"text\",\n                  className: \"inputText\",\n                  onChange: dateInput,\n                  onBlur: blurDateInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this), blurMssg3 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: \"**required**\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 34\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 77\n              }, this), errorDate ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"errorMsg\",\n                children: \"Date formate is worng\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 83\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://www.magezon.com/pub/media/magezon-pagebuilder/core-builder/magento-2-login-registration-page.png\",\n              alt: \"logo\",\n              className: \"image-logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 16\n  }, this);\n};\n\n_s(CreateUser, \"PZO3d1DQ4QPr3NfdzzFG3rOoDrs=\");\n\n_c = CreateUser;\nexport default CreateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUser\");","map":{"version":3,"sources":["/home/peoplelink/peoplelink/Trainee_assignments/assignment01/src/components/CreateUser/index.js"],"names":["DataContext","v4","React","useState","FaUserAlt","AiFillMail","CreateUser","props","blurName","setblurName","blurEmail","setblurEmail","blurDob","setblurDob","name","setname","email","setemail","date","setdate","errorName","setErrorName","errorDate","setErrorDate","errorEmail","setErrorEmail","eamilChecking","seteamilChecking","blurNameInput","event","target","value","blurEmailInput","blurDateInput","nameInput","match","emailInput","dateInput","userDateBirth","Date","nowDate","console","log","toString","diff","getFullYear","list","addList","submtDetails","preventDefault","newList","id","endsWith","includes","emailAvalibel","find","each","setError","history","replace","setemailError","blurMssg1","blurMssg2","emailError","blurMssg3"],"mappings":"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","sourcesContent":["import DataContext from \"../Context\";\nimport {v4} from \"uuid\";\nimport React, { useState } from 'react';\nimport { FaUserAlt } from \"react-icons/fa\";\nimport {AiFillMail} from \"react-icons/ai\";\nimport \"./index.css\"\n\nconst CreateUser=(props)=> {\n    let [blurName, setblurName] = useState(false);\n    let [blurEmail, setblurEmail] = useState(false);\n    let [blurDob, setblurDob] = useState(false);\n    let [name,setname]=useState(\"\")\n    let [email,setemail]= useState(\"\")\n    let [date,setdate]= useState(\"\")\n    let [errorName,setErrorName]=useState(false)\n    let [errorDate,setErrorDate]= useState(false)\n    let [errorEmail,setErrorEmail]=useState(false)\n    let [eamilChecking,seteamilChecking]=useState(false)\n\n    const blurNameInput = (event) => {\n        if (event.target.value === \"\") {\n            setblurName(true);\n        } else {\n            setblurName(false);\n        }\n    };\n    \n    const blurEmailInput = (event) => {\n        if (event.target.value === \"\") {\n            setblurEmail(true);\n        }\n        else {\n            setblurEmail(false);\n        }\n    };\n    \n    const blurDateInput = (event) => {\n        if (event.target.value === \"\") {\n            setblurDob(true);\n        } else {\n            setblurDob(false);\n        }\n    };\n\n    \n    const nameInput=(event)=> {\n        setblurName(false)\n        setname(event.target.value)\n        if (!(event.target.value).match(/^[A-Za-z ]+$/)){\n          setErrorName(true)\n        } \n     }\n     const emailInput=(event)=>{\n        setblurEmail(false)\n        setemail(event.target.value)\n        seteamilChecking(false)\n    }\n     const dateInput=(event)=>{\n        setblurDob(false)\n        seteamilChecking(false)\n         const userDateBirth=new Date(event.target.value)\n         const nowDate=new Date()\n         if(event.target.value===\"\"){\n             console.log(\"date\")\n         }else{\n            if(userDateBirth.toString() ===\"Invalid Date\"){\n                setErrorDate(true)\n            }else{\n                setErrorDate(errorDate=false)\n                const diff=nowDate.getFullYear()-userDateBirth.getFullYear()\n                setdate(diff)\n                \n            }\n        }\n        }\n        \n\n        return <DataContext.Consumer>\n            {value=>{\n                const {list,addList}=value\n            \n                const submtDetails=(event)=>{\n            event.preventDefault()\n            const newList={\n                id:v4(),\n                name:name,\n                email:email,\n                date:date,\n            }\n            \n           \n            if(name===\"\" ){\n                setblurName(true);\n                setErrorEmail(false)\n                seteamilChecking(false)\n            }\n            if(email===\"\" ){\n                setblurEmail(true);\n                setErrorEmail(false)\n                seteamilChecking(false)\n            }\n            if(date===\"\"){\n                setblurDob(true);\n                setErrorEmail(false)\n                seteamilChecking(false)\n            }\n            \n            else if(newList.email.endsWith(\".com\") && newList.email.includes(\"@\")){\n                setErrorEmail(false)\n               \n                    const emailAvalibel=list.find(each=>each.email===newList.email)\n                    if(emailAvalibel){\n                    \n                        seteamilChecking(true)\n                        setError(false)\n                       \n                    }else{\n\n                        seteamilChecking(false)\n                       \n                        addList(newList)\n                        \n                        const {history}=props \n                        history.replace('/')\n                    }\n                \n            }\n            else {\n                setemailError(true)\n                seteamilChecking(false)\n            }\n        }\n                return (<div className=\"bg-container\">\n        <div className=\"from-container\">\n            <form className=\"form\" onSubmit={submtDetails}>\n                <label htmlFor=\"text\">Name</label>\n                <div className=\"margin\">\n                    <div className=\"input-container\" id=\"text\">\n                        <div className=\"icon-container\">\n                            <FaUserAlt className=\"image\" />\n                        </div>\n                        <input type=\"text\" id=\"text\" className=\"inputText\" onChange={nameInput} onBlur={blurNameInput} />\n                    </div>\n                    {blurMssg1 ? <p className=\"errorMsg\">**required**</p> : <p></p>}\n                    <br/>\n                </div>\n                <label htmlFor=\"email\">Email</label>\n                <div className=\"margin\">\n                    <div className=\"input-container\" id=\"email\">\n                        <div className=\"icon-container\">\n                            <AiFillMail className=\"image\" />\n                        </div>\n                        <input type=\"text\" id=\"text\" className=\"inputText\" onChange={emailInput} onBlur={blurEmailInput} />\n                    </div>\n                    {blurMssg2 ? <p className=\"errorMsg\">**required**</p> : <p></p>}\n                    {emailError&&<p className=\"errorMsg\">Email worng</p>}\n                    {eamilChecking &&<p className=\"errorMsg\">Email alredy exits</p>}\n                    <br/>\n                </div>\n                <label htmlFor=\"date\">Date Of Birth: MM/DD/YY</label>\n                <div className=\"margin\">\n                    <div className=\"input-container\" id=\"date\">\n                        <div className=\"icon-container\">\n                            <AiFillMail className=\"image\" />\n                        </div>\n                        <input type=\"text\" id=\"text\" className=\"inputText\" onChange={dateInput} onBlur={blurDateInput} />\n                    </div>\n                    {blurMssg3 ? <p className=\"errorMsg\">**required**</p> : <p></p>}\n                    {errorDate? <p className=\"errorMsg\">Date formate is worng</p>:<p></p>}\n                    <br/>\n                </div>\n               \n                <button type=\"submit\" className=\"btn\">Submit</button>\n            </form>\n            <div className=\"image-container\">\n            <img src=\"https://www.magezon.com/pub/media/magezon-pagebuilder/core-builder/magento-2-login-registration-page.png\" alt=\"logo\" className=\"image-logo\" />\n            </div>\n        </div>\n    </div>)\n            }\n\n            }\n        </DataContext.Consumer>\n        \n        \n}\n\nexport default CreateUser"]},"metadata":{},"sourceType":"module"}