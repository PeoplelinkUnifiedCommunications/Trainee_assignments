{"ast":null,"code":"var _jsxFileName = \"/home/peoplelink/peoplelink/Trainee_assignments/assignment01/src/components/CreateUser/index.js\",\n    _s = $RefreshSig$();\n\nimport DataContext from \"../Context\";\nimport { v4 } from \"uuid\";\nimport React, { useState } from 'react';\nimport { FaUserAlt } from \"react-icons/fa\";\nimport { AiFillMail } from \"react-icons/ai\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateUser = props => {\n  _s();\n\n  let [blurDob, setblurDob] = useState(false);\n  let [name, setName] = useState(\"\");\n  let [email, setEmail] = useState(\"\");\n  let [dob, setDob] = useState(\"\");\n  let [NameDetails, setNameDetails] = useState({\n    ValidName: ''\n  });\n  let [EmailDetails, setEmailDetails] = useState({\n    ValidEmail: ''\n  });\n  let [DobDetails, setDobDetails] = useState({\n    ValidDob: ''\n  });\n\n  const nameInput = event => {\n    setName(event.target.value);\n\n    if (event.target.value.match(/^[A-Za-z ]+$/)) {\n      setNameDetails({\n        ValidName: ''\n      });\n    } else {\n      setNameDetails({\n        ValidName: 'Invalid Name'\n      });\n    }\n\n    if (event.target.value === \"\") {\n      setName({\n        ValidName: \"Required\"\n      });\n    }\n  };\n\n  const emailInput = event => {\n    setEmail(event.target.value);\n    var regex = /^((([a-zA-Z]|[0-9])|([-]|[_]|[.])){1,})+[@](([a-zA-Z0-9])|([-]|[.])){2,40}[.]((([a-zA-Z0-9]){2,10})|(([a-zA-Z0-9]){2,4}[.]([a-zA-Z0-9]){2,4}))$/;\n\n    if (regex.test(event.target.value)) {\n      setErrorEmail(true);\n    } else {\n      setErrorEmail(false);\n    }\n\n    seteamilChecking(false);\n  };\n\n  const dateInput = event => {\n    setblurDob(false);\n    seteamilChecking(false);\n    const userDateBirth = new Date(event.target.value);\n    const nowDate = new Date();\n\n    if (event.target.value === \"\") {\n      console.log(\"date\");\n    } else {\n      if (userDateBirth.toString() === \"Invalid Date\") {\n        setErrorDate(true);\n      } else {\n        setErrorDate(errorDate = false);\n        const diff = nowDate.getFullYear() - userDateBirth.getFullYear();\n        setdate(diff);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DataContext.Consumer, {\n    children: value => {\n      const {\n        list,\n        addList\n      } = value;\n\n      const submtDetails = event => {\n        event.preventDefault();\n        const newList = {\n          id: v4(),\n          name: name,\n          email: email,\n          date: date\n        };\n\n        if (name === \"\") {\n          setName({\n            ValidName: \"Required\"\n          });\n        }\n\n        if (NameDetails.Name === \"\" || email === \"\" || date === \"\") {\n          //setblurName(true);\n          setErrorEmail(false);\n          seteamilChecking(false);\n        } else {\n          const emailAvalibel = list.find(each => each.email === newList.email);\n\n          if (emailAvalibel) {\n            seteamilChecking(true);\n            setErrorEmail(false);\n          } else {\n            seteamilChecking(false);\n            addList(newList);\n            const {\n              history\n            } = props;\n            history.replace('/');\n          }\n        }\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: submtDetails,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"margin\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              id: \"text\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon-container\",\n                children: /*#__PURE__*/_jsxDEV(FaUserAlt, {\n                  className: \"image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"text\",\n                value: NameDetails.Name,\n                className: \"inputText\",\n                onChange: nameInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: [NameDetails.ValidName, NameDetails.BlurName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"margin\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              id: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon-container\",\n                children: /*#__PURE__*/_jsxDEV(AiFillMail, {\n                  className: \"image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"text\",\n                className: \"inputText\",\n                onChange: emailInput,\n                onBlur: blurEmailInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this), blurEmail ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: \"**required**\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 34\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 77\n            }, this), errorEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: \"Email worng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 35\n            }, this), eamilChecking && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: \"Email alredy exits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Date Of Birth: MM/DD/YY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"margin\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              id: \"date\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon-container\",\n                children: /*#__PURE__*/_jsxDEV(AiFillMail, {\n                  className: \"image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"text\",\n                className: \"inputText\",\n                onChange: dateInput,\n                onBlur: blurDateInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this), blurDob ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: \"**required**\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 32\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 75\n            }, this), errorDate ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: \"Date formate is worng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 83\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CreateUser, \"hoS/eNd6S0/z8jjXZoKw4nory4I=\");\n\n_c = CreateUser;\nexport default CreateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUser\");","map":{"version":3,"sources":["/home/peoplelink/peoplelink/Trainee_assignments/assignment01/src/components/CreateUser/index.js"],"names":["DataContext","v4","React","useState","FaUserAlt","AiFillMail","CreateUser","props","blurDob","setblurDob","name","setName","email","setEmail","dob","setDob","NameDetails","setNameDetails","ValidName","EmailDetails","setEmailDetails","ValidEmail","DobDetails","setDobDetails","ValidDob","nameInput","event","target","value","match","emailInput","regex","test","setErrorEmail","seteamilChecking","dateInput","userDateBirth","Date","nowDate","console","log","toString","setErrorDate","errorDate","diff","getFullYear","setdate","list","addList","submtDetails","preventDefault","newList","id","date","Name","emailAvalibel","find","each","history","replace","BlurName","blurEmailInput","blurEmail","errorEmail","eamilChecking","blurDateInput"],"mappings":"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","sourcesContent":["import DataContext from \"../Context\";\nimport {v4} from \"uuid\";\nimport React, { useState } from 'react';\nimport { FaUserAlt } from \"react-icons/fa\";\nimport {AiFillMail} from \"react-icons/ai\";\nimport \"./index.css\"\n\nconst CreateUser=(props)=> {\n    \n    \n    let [blurDob, setblurDob] = useState(false);\n    let [name,setName]=useState(\"\")\n    let [email,setEmail]= useState(\"\")\n    let [dob,setDob]= useState(\"\")\n    let [NameDetails,setNameDetails]=useState({ValidName:''})\n    let [EmailDetails,setEmailDetails]=useState({ValidEmail:''})\n    let [DobDetails,setDobDetails]=useState({ValidDob:''})\n    \n\n    \n    const nameInput=(event)=> {\n        setName(event.target.value)\n        if ((event.target.value).match(/^[A-Za-z ]+$/)){\n          setNameDetails({ValidName:''})\n        }else{\n          setNameDetails({ValidName:'Invalid Name'})\n        }\n        if (event.target.value===\"\"){\n          setName({ValidName:\"Required\"})\n        }\n     }\n     const emailInput=(event)=>{\n        setEmail(event.target.value)\n        var regex = /^((([a-zA-Z]|[0-9])|([-]|[_]|[.])){1,})+[@](([a-zA-Z0-9])|([-]|[.])){2,40}[.]((([a-zA-Z0-9]){2,10})|(([a-zA-Z0-9]){2,4}[.]([a-zA-Z0-9]){2,4}))$/;\n        if ((regex.test(event.target.value))){\n            setErrorEmail(true)\n        }else{\n          setErrorEmail(false)\n        }\n        seteamilChecking(false)\n    }\n     const dateInput=(event)=>{\n        setblurDob(false)\n        seteamilChecking(false)\n         const userDateBirth=new Date(event.target.value)\n         const nowDate=new Date()\n         if(event.target.value===\"\"){\n             console.log(\"date\")\n         }else{\n            if(userDateBirth.toString() ===\"Invalid Date\"){\n                setErrorDate(true)\n            }else{\n                setErrorDate(errorDate=false)\n                const diff=nowDate.getFullYear()-userDateBirth.getFullYear()\n                setdate(diff)\n                \n            }\n        }\n        }\n        \n\n    return <DataContext.Consumer>\n        {value=>{\n          const {list,addList}=value\n          const submtDetails=(event)=>{\n                  event.preventDefault()\n                  const newList={\n                    id:v4(),\n                    name:name,\n                    email:email,\n                    date:date,\n                  }\n            if (name===\"\"){\n                setName({ValidName:\"Required\"})\n            }\n            if(NameDetails.Name===\"\" || email===\"\" || date===\"\"){\n                //setblurName(true);\n                setErrorEmail(false)\n                seteamilChecking(false)\n            }else {\n              const emailAvalibel=list.find(each=>each.email===newList.email)\n              if(emailAvalibel){\n                seteamilChecking(true)\n                setErrorEmail(false)  \n              }else{\n                seteamilChecking(false)\n                addList(newList)\n                const {history}=props \n                history.replace('/')\n              }   \n            }\n        }\n        return (\n        <div className=\"bg-container\">\n            <form className=\"form\" onSubmit={submtDetails}>\n                <label htmlFor=\"text\">Name</label>\n                <div className=\"margin\">\n                    <div className=\"input-container\" id=\"text\">\n                        <div className=\"icon-container\">\n                            <FaUserAlt className=\"image\" />\n                        </div>\n                        <input type=\"text\" id=\"text\" value={NameDetails.Name} className=\"inputText\" onChange={nameInput}/> \n                    </div>\n                    <p className=\"errorMsg\">{NameDetails.ValidName}{NameDetails.BlurName}</p>\n                    \n                    <br/>\n                </div>\n                <label htmlFor=\"email\">Email</label>\n                <div className=\"margin\">\n                    <div className=\"input-container\" id=\"email\">\n                        <div className=\"icon-container\">\n                            <AiFillMail className=\"image\" />\n                        </div>\n                        <input type=\"text\" id=\"text\" className=\"inputText\" onChange={emailInput} onBlur={blurEmailInput} />\n                    </div>\n                    {blurEmail ? <p className=\"errorMsg\">**required**</p> : <p></p>}\n                    {errorEmail &&<p className=\"errorMsg\">Email worng</p>}\n                    {eamilChecking &&<p className=\"errorMsg\">Email alredy exits</p>}\n                    <br/>\n                </div>\n                <label htmlFor=\"date\">Date Of Birth: MM/DD/YY</label>\n                <div className=\"margin\">\n                    <div className=\"input-container\" id=\"date\">\n                        <div className=\"icon-container\">\n                            <AiFillMail className=\"image\" />\n                        </div>\n                        <input type=\"text\" id=\"text\" className=\"inputText\" onChange={dateInput} onBlur={blurDateInput} />\n                    </div>\n                    {blurDob ? <p className=\"errorMsg\">**required**</p> : <p></p>}\n                    {errorDate? <p className=\"errorMsg\">Date formate is worng</p>:<p></p>}\n                    <br/>\n                </div>\n               \n                <button type=\"submit\" className=\"btn\">Submit</button>\n            </form>\n    </div>)\n        }\n    }\n        </DataContext.Consumer>\n        \n        \n}\n\nexport default CreateUser"]},"metadata":{},"sourceType":"module"}