{"ast":null,"code":"var _jsxFileName = \"/home/peoplelink/peoplelink/Trainee_assignments/assignment01/src/components/CreateUser/index.js\",\n    _s = $RefreshSig$();\n\nimport DataContext from \"../Context\";\nimport { v4 } from \"uuid\";\nimport React, { useState } from 'react';\nimport { FaUserAlt } from \"react-icons/fa\";\nimport { AiFillMail } from \"react-icons/ai\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateUser = props => {\n  _s();\n\n  let [Name, setName] = useState({\n    name: '',\n    ValidName: '',\n    BlurName: ''\n  }); //let [blurName, setblurName] = useState(false);\n\n  let [blurEmail, setblurEmail] = useState(false);\n  let [blurDob, setblurDob] = useState(false); //let [name,setname]=useState(\"\")\n\n  let [email, setemail] = useState(\"\");\n  let [date, setdate] = useState(\"\"); //let [errorName,setErrorName]=useState(false)\n\n  let [errorDate, setErrorDate] = useState(false);\n  let [errorEmail, setErrorEmail] = useState(false);\n  let [eamilChecking, seteamilChecking] = useState(false);\n\n  const blurEmailInput = event => {\n    if (event.target.value === \"\") {\n      setblurEmail(true);\n    } else {\n      setblurEmail(false);\n    }\n  };\n\n  const blurDateInput = event => {\n    if (event.target.value === \"\") {\n      setblurDob(true);\n    } else {\n      setblurDob(false);\n    }\n  };\n\n  const nameInput = event => {\n    setblurName(false);\n    setName({\n      name: event.target.value\n    });\n\n    if (!event.target.value.match(/^[A-Za-z ]+$/)) {\n      setName({\n        ValidName: '',\n        BlurName: \"\"\n      });\n    } else {\n      setName(false);\n    }\n  };\n\n  const emailInput = event => {\n    setblurEmail(false);\n    setemail(event.target.value);\n    var regex = /^((([a-zA-Z]|[0-9])|([-]|[_]|[.])){1,})+[@](([a-zA-Z0-9])|([-]|[.])){2,40}[.]((([a-zA-Z0-9]){2,10})|(([a-zA-Z0-9]){2,4}[.]([a-zA-Z0-9]){2,4}))$/;\n\n    if (!regex.test(event.target.value)) {\n      setErrorEmail(true);\n    } else {\n      setErrorEmail(false);\n    }\n\n    seteamilChecking(false);\n  };\n\n  const dateInput = event => {\n    setblurDob(false);\n    seteamilChecking(false);\n    const userDateBirth = new Date(event.target.value);\n    const nowDate = new Date();\n\n    if (event.target.value === \"\") {\n      console.log(\"date\");\n    } else {\n      if (userDateBirth.toString() === \"Invalid Date\") {\n        setErrorDate(true);\n      } else {\n        setErrorDate(errorDate = false);\n        const diff = nowDate.getFullYear() - userDateBirth.getFullYear();\n        setdate(diff);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DataContext.Consumer, {\n    children: value => {\n      const {\n        list,\n        addList\n      } = value;\n\n      const submtDetails = event => {\n        event.preventDefault();\n        const newList = {\n          id: v4(),\n          name: name,\n          email: email,\n          date: date\n        };\n\n        if (name === \"\" || email === \"\" || date === \"\") {\n          setblurName(true);\n          setErrorEmail(false);\n          seteamilChecking(false);\n        } else {\n          const emailAvalibel = list.find(each => each.email === newList.email);\n\n          if (emailAvalibel) {\n            seteamilChecking(true);\n            setErrorEmail(false);\n          } else {\n            seteamilChecking(false);\n            addList(newList);\n            const {\n              history\n            } = props;\n            history.replace('/');\n          }\n        }\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: submtDetails,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"text\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"margin\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              id: \"text\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon-container\",\n                children: /*#__PURE__*/_jsxDEV(FaUserAlt, {\n                  className: \"image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"text\",\n                className: \"inputText\",\n                onChange: nameInput,\n                onBlur: blurNameInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: \"ValidName}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }, this), \"//\", blurName ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: \"**required**\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 35\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 78\n            }, this), \"//\", errorName ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: \"Invalid Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 36\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 79\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"margin\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              id: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon-container\",\n                children: /*#__PURE__*/_jsxDEV(AiFillMail, {\n                  className: \"image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"text\",\n                className: \"inputText\",\n                onChange: emailInput,\n                onBlur: blurEmailInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }, this), blurEmail ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: \"**required**\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 34\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 77\n            }, this), errorEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: \"Email worng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 35\n            }, this), eamilChecking && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: \"Email alredy exits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Date Of Birth: MM/DD/YY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"margin\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              id: \"date\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon-container\",\n                children: /*#__PURE__*/_jsxDEV(AiFillMail, {\n                  className: \"image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"text\",\n                className: \"inputText\",\n                onChange: dateInput,\n                onBlur: blurDateInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this), blurDob ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: \"**required**\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 32\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 75\n            }, this), errorDate ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"errorMsg\",\n              children: \"Date formate is worng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 83\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CreateUser, \"p9dLb5d8sYfjS+R4SDhs7RTRzHg=\");\n\n_c = CreateUser;\nexport default CreateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUser\");","map":{"version":3,"sources":["/home/peoplelink/peoplelink/Trainee_assignments/assignment01/src/components/CreateUser/index.js"],"names":["DataContext","v4","React","useState","FaUserAlt","AiFillMail","CreateUser","props","Name","setName","name","ValidName","BlurName","blurEmail","setblurEmail","blurDob","setblurDob","email","setemail","date","setdate","errorDate","setErrorDate","errorEmail","setErrorEmail","eamilChecking","seteamilChecking","blurEmailInput","event","target","value","blurDateInput","nameInput","setblurName","match","emailInput","regex","test","dateInput","userDateBirth","Date","nowDate","console","log","toString","diff","getFullYear","list","addList","submtDetails","preventDefault","newList","id","emailAvalibel","find","each","history","replace","blurNameInput","blurName","errorName"],"mappings":"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","sourcesContent":["import DataContext from \"../Context\";\nimport {v4} from \"uuid\";\nimport React, { useState } from 'react';\nimport { FaUserAlt } from \"react-icons/fa\";\nimport {AiFillMail} from \"react-icons/ai\";\nimport \"./index.css\"\n\nconst CreateUser=(props)=> {\n    let [Name,setName]=useState({name:'',ValidName:'',BlurName:''})\n    //let [blurName, setblurName] = useState(false);\n    let [blurEmail, setblurEmail] = useState(false);\n    let [blurDob, setblurDob] = useState(false);\n    //let [name,setname]=useState(\"\")\n    let [email,setemail]= useState(\"\")\n    let [date,setdate]= useState(\"\")\n    //let [errorName,setErrorName]=useState(false)\n    let [errorDate,setErrorDate]= useState(false)\n    let [errorEmail,setErrorEmail]=useState(false)\n    let [eamilChecking,seteamilChecking]=useState(false)\n\n    \n    \n    const blurEmailInput = (event) => {\n        if (event.target.value === \"\") {\n            setblurEmail(true);\n        }\n        else {\n            setblurEmail(false);\n        }\n    };\n    \n    const blurDateInput = (event) => {\n        if (event.target.value === \"\") {\n            setblurDob(true);\n        } else {\n            setblurDob(false);\n        }\n    };\n\n    \n    const nameInput=(event)=> {\n        setblurName(false)\n        setName({name:event.target.value})\n        if (!(event.target.value).match(/^[A-Za-z ]+$/)){\n          setName({ValidName:'',BlurName:\"\"})\n        }else{\n          setName(false)\n        }\n     }\n     const emailInput=(event)=>{\n        setblurEmail(false)\n        setemail(event.target.value)\n        var regex = /^((([a-zA-Z]|[0-9])|([-]|[_]|[.])){1,})+[@](([a-zA-Z0-9])|([-]|[.])){2,40}[.]((([a-zA-Z0-9]){2,10})|(([a-zA-Z0-9]){2,4}[.]([a-zA-Z0-9]){2,4}))$/;\n        if (!(regex.test(event.target.value))){\n            setErrorEmail(true)\n        }else{\n          setErrorEmail(false)\n        }\n        seteamilChecking(false)\n    }\n     const dateInput=(event)=>{\n        setblurDob(false)\n        seteamilChecking(false)\n         const userDateBirth=new Date(event.target.value)\n         const nowDate=new Date()\n         if(event.target.value===\"\"){\n             console.log(\"date\")\n         }else{\n            if(userDateBirth.toString() ===\"Invalid Date\"){\n                setErrorDate(true)\n            }else{\n                setErrorDate(errorDate=false)\n                const diff=nowDate.getFullYear()-userDateBirth.getFullYear()\n                setdate(diff)\n                \n            }\n        }\n        }\n        \n\n    return <DataContext.Consumer>\n        {value=>{\n          const {list,addList}=value\n          const submtDetails=(event)=>{\n                  event.preventDefault()\n                  const newList={\n                    id:v4(),\n                    name:name,\n                    email:email,\n                    date:date,\n                  }\n            if(name===\"\" || email===\"\" || date===\"\"){\n                setblurName(true);\n                setErrorEmail(false)\n                seteamilChecking(false)\n            }else {\n              const emailAvalibel=list.find(each=>each.email===newList.email)\n              if(emailAvalibel){\n                seteamilChecking(true)\n                setErrorEmail(false)  \n              }else{\n                seteamilChecking(false)\n                addList(newList)\n                const {history}=props \n                history.replace('/')\n              }   \n            }\n        }\n        return (\n        <div className=\"bg-container\">\n            <form className=\"form\" onSubmit={submtDetails}>\n                <label htmlFor=\"text\">Name</label>\n                <div className=\"margin\">\n                    <div className=\"input-container\" id=\"text\">\n                        <div className=\"icon-container\">\n                            <FaUserAlt className=\"image\" />\n                        </div>\n                        <input type=\"text\" id=\"text\" className=\"inputText\" onChange={nameInput} onBlur={blurNameInput} />\n                    </div>\n                    <p className=\"errorMsg\">ValidName}</p>\n                    //{blurName ? <p className=\"errorMsg\">**required**</p> : <p></p>}\n                    //{errorName ? <p className=\"errorMsg\">Invalid Name</p> : <p></p>}\n                    <br/>\n                </div>\n                <label htmlFor=\"email\">Email</label>\n                <div className=\"margin\">\n                    <div className=\"input-container\" id=\"email\">\n                        <div className=\"icon-container\">\n                            <AiFillMail className=\"image\" />\n                        </div>\n                        <input type=\"text\" id=\"text\" className=\"inputText\" onChange={emailInput} onBlur={blurEmailInput} />\n                    </div>\n                    {blurEmail ? <p className=\"errorMsg\">**required**</p> : <p></p>}\n                    {errorEmail &&<p className=\"errorMsg\">Email worng</p>}\n                    {eamilChecking &&<p className=\"errorMsg\">Email alredy exits</p>}\n                    <br/>\n                </div>\n                <label htmlFor=\"date\">Date Of Birth: MM/DD/YY</label>\n                <div className=\"margin\">\n                    <div className=\"input-container\" id=\"date\">\n                        <div className=\"icon-container\">\n                            <AiFillMail className=\"image\" />\n                        </div>\n                        <input type=\"text\" id=\"text\" className=\"inputText\" onChange={dateInput} onBlur={blurDateInput} />\n                    </div>\n                    {blurDob ? <p className=\"errorMsg\">**required**</p> : <p></p>}\n                    {errorDate? <p className=\"errorMsg\">Date formate is worng</p>:<p></p>}\n                    <br/>\n                </div>\n               \n                <button type=\"submit\" className=\"btn\">Submit</button>\n            </form>\n    </div>)\n        }\n    }\n        </DataContext.Consumer>\n        \n        \n}\n\nexport default CreateUser"]},"metadata":{},"sourceType":"module"}